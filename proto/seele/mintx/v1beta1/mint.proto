syntax = "proto3";
package cosmos.mintx.v1beta1;

option go_package = "x/mintx/types";

import "gogoproto/gogo.proto";

// Minter represents the minting state.
message Minter {
   // start height adjustment
   uint64 HeightAdjustment = 1 [(gogoproto.moretags) = "yaml:\"height_adjustment\""];
}

// DepositParams defines the params for deposits on governance proposals.
message MintPlan {
  
  // expected start height
  uint64 StartHeight = 1 [(gogoproto.moretags) = "yaml:\"start_height\""];

  // expected end height
  uint64 EndHeight = 2 [(gogoproto.moretags) = "yaml:\"end_height\""];

  // reward by block
  string RewardPerBlock = 3 [
    (gogoproto.moretags) = "yaml:\"reward_per_block\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
    ];

}

// Params holds parameters for the mint module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  // type of coin to mint
  string mint_denom = 1;

  // default reward by block
  string DefaultRewardPerBlock = 2 [
    (gogoproto.moretags) = "yaml:\"default_reward_per_block\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
    ];

  //  Minimum deposit for a proposal to enter voting period.
  repeated MintPlan mint_plans = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.moretags) = "yaml:\"mint_plans\""
  ];


}
